@startuml utils.py

!startsub work_task_creation
    :work_task_creation()|
    if (current day dir) then (no)
        :make dir;
    else (yes)
    endif
    :work_task_track()|
    :display_work_directory_txt_files();
    :get date;
    (U)
    -> input();
    if (start of day) then (yes)
        :delimiter()|
        :get date;
        :write date to
        "Weekday_work_done.txt";
        :delimiter returns>
    endif
    (U)
    -> input();
    :enter task
    enter project?;
    switch (begin project)
    case ("yes")
        :get start time;
        :write started task to
        "Weekday_work_done.txt";
        (U)
        -> input();
        switch (done)
        case ("yes")
            :get end time;
            :show duration;
            :write finished task to
            "Weekday_work_done.txt";
        case ("no")
            :task aborted msg;
            :write aborted task to
            "Weekday_work_done.txt";
        case (other)
            :error msg;
            :return -1>
        endswitch
    case ("no")
        :task aborted msg;
        :write aborted task to
        "Weekday_work_done.txt";
        :return -1>
        detach
    case (other)
        :error msg;
        :return -1>
        detach
    endswitch
    (U)
    -> input();
    if (end of day) then (yes)
        :delimiter();
    endif
!endsub
detach

!startsub list_tasks
    :list_tasks()|
    :list_all_dirs();
    (U)
    -> input();
    :choose dir;
    if (dir exists) then (yes)
        :display_txt_files();
        (U)
        -> input();
        :choose file;
        if (file exists) then (yes)
            :print file;
        else (no)
            :error msg;
        endif
    else (no)
        :error msg;
        :return -1>
    endif
!endsub
detach

!startsub current_time
    :current_time()|
    :print time;
!endsub
detach

!startsub clear
    :clear();
!endsub
detach

!startsub save_info
    :save_info()|
    :list_all_dirs();
    (U)
    -> input();
    :choose dir;
    if (dir exists) then (yes)
        :display_txt_files();
        (U)
        -> input();
        :choose file;
        if (file exists) then (yes)
            :append file to\n "full-info.txt";
        else (no)
            :error msg;
        endif
    else (no)
        :error msg;
        :return -1>
    endif
!endsub
detach

!startsub print_commands
    :print_commands()|
    group for each command
    :print \n"command -> description";
    end group
!endsub
detach

!startsub print_found_hours
    :print_found_hours()|
    :list_all_dirs();
    (U)
    -> input();
    :choose dir;
    if (dir exists) then (yes)
        :display_txt_files();
        (U)
        -> input();
        :choose date
        choose file;
        if (file exists) then (yes)
            group for each line
            if (line matches date) then (yes)
                :print line;
                :store line;
            endif
            end group
            (U)
            -> input();
            if (save?) then (yes)
                :write stored info to \n"tasks-completed.txt";
            endif
        else (no)
            :error msg;
        endif
    else (no)
        :error msg;
        :return -1>
    endif
!endsub

@enduml